version: "3.5"

services:
  zookeeper:
    image: "docker.io/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    restart: unless-stopped
  postgres:
    container_name: postgres-0
    image: postgres:alpine
    environment:
      POSTGRES_DB: authentication
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
  oracle:
    image: gvenzl/oracle-free:latest
    environment:
      ORACLE_RANDOM_PASSWORD: true
      APP_USER: usersadmin
      APP_USER_PASSWORD: password
    ports:
      - 1521:1521
    healthcheck:
      test:
        - CMD
        - /opt/oracle/healthcheck.sh
      interval: 10s
      timeout: 5s
      retries: 10
#After connecting to oracle, in order to create multiple users follow this;
#ALTER SESSION SET CONTAINER = freepdb1;
#CREATE USER <user_name> IDENTIFIED BY <password>;
#GRANT CREATE SESSION TO <user_name>;
#GRANT CREATE TABLE TO <user_name>;
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local